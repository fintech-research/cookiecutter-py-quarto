[project]
name = "cookiecutter-py-quarto"
version = "0.0.1"
description = "A python cookiecutter application to create a new research project that use Python and Quarto."
authors = [{ name = "Vincent GrÃ©goire", email = "vincent.gregoire@gmail.com" }]
readme = "README.md"
keywords = ['cookiecutter', 'template', 'uv']
requires-python = ">=3.12,<4.0"
dependencies = ["cookiecutter>=2.1.1"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Code Generators",
]


[project.urls]
Repository = "https://github.com/fintech-research/cookiecutter-py-quarto"
Documentation = "https://fintech-research.github.io/cookiecutter-py-quarto/"
Homepage = "https://fintech-research.github.io/cookiecutter-py-quarto/"

[dependency-groups]
dev = [
  "pytest>=7.2.0",
  "pre-commit>=2.20.0",
  "pytest-cookies>=0.6.1",
  "tox-uv>=1.11.3",
  "mypy>=0.991",
  "pytest-cov>=4.0.0",
  "ruff>=0.11.5",
  "mkdocs>=1.4.2",
  "mkdocs-material>=8.5.10",
  "mkdocstrings[python]>=0.19.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.setuptools]
packages = ["cookiecutter_py_quarto"]

[tool.setuptools.package-data]
"cookiecutter_py_quarto" = ["*"]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["cookiecutter_py_quarto"]

[tool.mypy]
files = ['cookiecutter_py_quarto']
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.ruff]
target-version = "py39"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "S603"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]
