# Install the virtual environment and install the pre-commit hooks
install:
    echo "ðŸš€ Creating virtual environment using uv"
    uv sync
    echo "ðŸš€ Initializing git repo if it does not exist"
    [ -d .git ] || git init -b main
    echo "ðŸš€ Installing git pre-commit hooks"
    uv run pre-commit install

# Run code quality tools.
check:
    echo "ðŸš€ Checking lock file consistency with 'pyproject.toml'"
    uv lock --locked
    echo "ðŸš€ Linting code: Running pre-commit"
    uv run pre-commit run -a
    echo "ðŸš€ Static type checking: Running ty"
    uv run ty check
    echo "ðŸš€ Checking for obsolete dependencies: Running deptry"
    uv run deptry src

# Test the code with pytest
test:
    echo "ðŸš€ Testing code: Running pytest"
    uv run python -m pytest --cov --cov-config=pyproject.toml --cov-report=xml

# Test if documentation can be built without warnings or errors
docs-test:
    echo "ðŸš€ Testing docs build"
    uv run mkdocs build -s

# Build and serve the documentation
docs:
    echo "ðŸš€ Building and serving the documentation"
    uv run mkdocs serve

# Build the paper (touch index.qmd to ensure code is re-run)
render-paper:
    echo "ðŸš€ Building paper"
    touch paper/index.qmd
    uv run quarto render paper

render-slides:
    echo "ðŸš€ Building long-form slides"
    touch slides/long-form/index.qmd
    uv run quarto render slides/long-form

preview-slides:
    echo "ðŸš€ Previewing long-form slides"
    touch slides/long-form/index.qmd
    uv run quarto preview slides/long-form

# Show available recipes and their short descriptions
help:
    just --summary
